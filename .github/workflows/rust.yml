name: Rust CI

on:
  push:
    branches: [ "main", "ci-testing" ]
    paths-ignore:
      - "README.md"
      - "doc/**"
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -Dwarnings

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install nightly Rust
      run: rustup default nightly
    - name: Install Rust components
      run: rustup component add clippy rustfmt
    - name: Install cargo-llvm-cov
      uses: taiki-e/install-action@cargo-llvm-cov
    - name: Set up cargo cache
      uses: actions/cache@v4
      continue-on-error: false
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          **/target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Run linter
      run: cargo clippy --all-features --no-deps
    - name: Run formatting checker
      run: cargo fmt --all -- --check
    - name: Generate code coverage
      run: cargo llvm-cov --all-features --workspace --codecov --output-path codecov.json
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: codecov.json
        fail_ci_if_error: true
